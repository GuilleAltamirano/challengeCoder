paths:
  /api/carts/{query}:
    get:
      summary: Return all carts
      tags: 
        - Carts
      description: Required session
      parameters:
        - name: query
          in: path
          required: false
          description: Query for pagination
          schema:
            type: String
            description: page, limit, sort
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: object
                    properties:
                      docs:
                        type: array
                        items:
                          $ref: '#components/schemas/Cart'
                      totalPage:
                        type: number
                      hasPrevPage:
                        type: boolean
                      prevPage:
                        type: number
                      hasNextPage:
                        type: boolean
                      nextPage:
                        type: number
        401:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status401'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status500'

  /api/carts/{cid}:
    get:
      summary: Return cart searched
      tags: 
        - Carts
      description: Required session user, premium or admin
      parameters:
        - name: cid
          in: path
          required: true
          description: _id autogenerated by mongo
          schema:
            type: String
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cart'
        400:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status400'
        401:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status401'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status500'

    put:
      summary: Update cart
      tags: 
        - Carts
      description: Required session user, premium or admin
      parameters:
        - name: cid
          in: path
          required: true
          description: _id autogenerated by mongo
          schema:
            type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cart'
        400:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status400'
        401:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status401'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status500'

    delete:
      summary: Delete cart
      tags: 
        - Carts
      description: Required session, user or premium(different from your products)
      parameters:
        - name: cid
          in: path
          required: true
          description: _id autogenerated by mongo
          schema:
            type: String
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status200'
        400:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status400'
        401:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status401'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status500'

  /api/carts:
    post:
      summary: Create cart
      tags: 
        - Carts
      description: Required session, admin
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cart'
        401:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status401'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status500'

  /api/carts/{cid}/products/{pid}:
    post:
      summary: Post prod in cart
      tags: 
        - Carts
      description: Required session, user or premium(different from your products)
      parameters:
        - name: cid
          in: path
          required: true
          description: _id autogenerated by mongo
          schema:
            type: String
        - name: pid
          in: path
          required: true
          description: _id autogenerated by mongo
          schema:
            type: String
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status200'
        400:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status400'
        401:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status401'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status500'

    put:
      summary: Put qty in cart
      tags: 
        - Carts
      description: Required session, user or premium(different from your products)
      parameters:
        - name: cid
          in: path
          required: true
          description: _id autogenerated by mongo
          schema:
            type: String
        - name: pid
          in: path
          required: true
          description: _id autogenerated by mongo
          schema:
            type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              quantity:
                type: number
            example:
              quantity: 5
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status200'
        400:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status400'
        401:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status401'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status500'

    delete:
      summary: Delete prod in cart
      tags: 
        - Carts
      description: Required session, user or premium(different from your products)
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status200'
        400:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status400'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status500'

  /api/carts/{cid}/purchase:
    post:
      summary: Purchase
      tags: 
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: _id autogenerated by mongo
          schema:
            type: String
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: object
                    $ref: '#/components/schemas/Purchase'
        400:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status400'
        401:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status401'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Status500'

components:
  schemas:

    Purchase:
      type: object
      properties:
        successful_purchase:
          type: object
          properties:
            amount:
              type: number
            purchaser:
              type: string
            _id:
              type: ObjectId
              description: Id autogenerated by Mongo
            code:
              type: string
              description: Id for autogenerated by Api
            purchase_datetime:
              type: string
              description: date_time
          example:
            amount: 900
            purchaser: admin@gmail.com
            _id: 64b22c29ee49616617f151e0
            code: 6it780
            purchase_datetime: "2023-07-15T05:18:33.188Z"
        failed_purchase:
          type: array
          items:
            _id: ObjectId
            description: Product _id
          _id: ObjectId('6434b4043686ffd2f48230c1')

    Cart:
      type: object
      properties:
        _id:
          type: string
          example: 6432fcbe70f85e19dfe87e66
        products:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/ProductInCart'

    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerated by Mongo
        title:
          type: String
          description: Title for product, min 3 and max 15 characters
        description:
          type: String
          description: Description for product, min 3 and max 15 characters
        code:
          type: String
          description: Code for product, length 6 characters
        price:
          type: Number
          description: Price for product, value min 0
        status:
          type: Boolean
          description: Status for product, true or false
        stock:
          type: Number
          description: Stock for product, min 1 and max 999
        category:
          type: Number
          description: Category for product
        owner:
          type: String
          description: Owner for product, only USER, PREMIUM or ADMIN
        thumbnails:
          type: Array
          description: Thumbnails for product, no required
      example:
        _id: ObjectId('6434b4043686ffd2f48230c1')
        title: Coca-Cola
        description: Coca-Cola de 330ml retornable(vidrio)
        code: ABC123
        price: 100
        status: true
        stock: 20
        category: drinks
        owner: ADMIN
        thumbnails: https://placehold.co/300x300

    ProductInCart:
      type: object
      properties:
              pid:
                type: object
                $ref: '#/components/schemas/Product'
              quantity:
                type: number
                example: 1

    inputProduct:
      type: object
      properties:
        title:
          type: String
          description: Title for product, min 3 and max 15 characters
        description:
          type: String
          description: Description for product, min 3 and max 15 characters
        code:
          type: String
          description: Code for product, length 6 characters
        price:
          type: Number
          description: Price for product, value min 0
        stock:
          type: Number
          description: Stock for product, min 1 and max 999
        category:
          type: Number
          description: Category for product
        thumbnails:
          type: Array
          description: Thumbnails for product, no required
      example:
        title: Coca-Cola
        description: Coca-Cola de 330ml retornable(vidrio)
        code: ABC123
        price: 100
        stock: 20
        category: drinks
        thumbnails: https://placehold.co/300x300

    Status500:
      type: object
      properties:
        status:
          type: String
          description: false
        message:
          type: String
          description: Internal server error
      example:
        status: false
        message: Internal server error

    Status400:
      type: object
      properties:
        Status:
          type: String
          description: success or false
        Message:
          type: String
          description: Message error
      example:
        status: false
        message: Product invalid

    Status401:
      type: object
      properties:
        Status:
          type: String
          description: false
        Message:
          type: String
          description: Message error
      example:
        status: false
        message: No permission

    Status200:
      type: object
      properties:
        Status:
          type: String
          description: success
        Message:
          type: String
          description: Message ok
      example:
        status: false
        message: product deleted or updated